{
  "{\"sourceRoot\":\"C:\\\\Users\\\\kim_1\\\\OneDrive\\\\ドキュメント\\\\dev\\\\react\\\\jyanken\\\\test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\kim_1\\\\OneDrive\\\\ドキュメント\\\\dev\\\\react\\\\jyanken\",\"filename\":\"C:\\\\Users\\\\kim_1\\\\OneDrive\\\\ドキュメント\\\\dev\\\\react\\\\jyanken\\\\test\\\\test.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\kim_1\\\\OneDrive\\\\ドキュメント\\\\dev\\\\react\\\\jyanken\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\kim_1\\OneDrive\\ドキュメント\\dev\\react\\jyanken\\test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\kim_1\\OneDrive\\ドキュメント\\dev\\react\\jyanken",
      "filename": "C:\\Users\\kim_1\\OneDrive\\ドキュメント\\dev\\react\\jyanken\\test\\test.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\kim_1\\OneDrive\\ドキュメント\\dev\\react\\jyanken",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\kim_1\\OneDrive\\ドキュメント\\dev\\react\\jyanken\\test\\test.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\kim_1\\OneDrive\\ドキュメント\\dev\\react\\jyanken\\test\\test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\kim_1\\OneDrive\\ドキュメント\\dev\\react\\jyanken\\test",
        "sourceFileName": "test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _assert = _interopRequireDefault(require(\"assert\"));\n\nvar _Jyanken = _interopRequireDefault(require(\"../src/components/Jyanken\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\ndescribe('Jyanken Class', function () {\n  var jyanken = new _Jyanken[\"default\"]();\n  describe(\"勝敗\", function () {\n    describe(\"CPUがグーの場合\", function () {\n      it(\"人間がグーで引き分け\", function () {\n        jyanken.pon(0, 0);\n\n        _assert[\"default\"].equal(jyanken.getScores()[0].judgement, 0);\n      });\n      it(\"人間がチョキで負け\", function () {\n        jyanken.pon(1, 0);\n\n        _assert[\"default\"].equal(jyanken.getScores()[0].judgement, 2);\n      });\n      it(\"人間がパーで勝ち\", function () {\n        jyanken.pon(2, 0);\n\n        _assert[\"default\"].equal(jyanken.getScores()[0].judgement, 1);\n      });\n    });\n    describe(\"CPUがチョキの場合\", function () {\n      it(\"人間がグーで勝ち\", function () {\n        jyanken.pon(0, 1);\n\n        _assert[\"default\"].equal(jyanken.getScores()[0].judgement, 1);\n      });\n      it(\"人間がチョキで引き分け\", function () {\n        jyanken.pon(1, 1);\n\n        _assert[\"default\"].equal(jyanken.getScores()[0].judgement, 0);\n      });\n      it(\"人間がパーで負け\", function () {\n        jyanken.pon(2, 1);\n\n        _assert[\"default\"].equal(jyanken.getScores()[0].judgement, 2);\n      });\n    });\n    describe(\"CPUがパーの場合\", function () {\n      it(\"人間がグーで負け\", function () {\n        jyanken.pon(0, 2);\n\n        _assert[\"default\"].equal(jyanken.getScores()[0].judgement, 2);\n      });\n      it(\"人間がチョキで勝ち\", function () {\n        jyanken.pon(1, 2);\n\n        _assert[\"default\"].equal(jyanken.getScores()[0].judgement, 1);\n      });\n      it(\"人間がパーで引き分け\", function () {\n        jyanken.pon(2, 2);\n\n        _assert[\"default\"].equal(jyanken.getScores()[0].judgement, 0);\n      });\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QuanMiXSwibmFtZXMiOlsiZGVzY3JpYmUiLCJqeWFua2VuIiwiSnlhbmtlbiIsIml0IiwicG9uIiwiYXNzZXJ0IiwiZXF1YWwiLCJnZXRTY29yZXMiLCJqdWRnZW1lbnQiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7Ozs7QUFFQUEsUUFBUSxDQUFDLGVBQUQsRUFBa0IsWUFBTTtBQUM1QixNQUFNQyxPQUFPLEdBQUcsSUFBSUMsbUJBQUosRUFBaEI7QUFFQUYsRUFBQUEsUUFBUSxDQUFDLElBQUQsRUFBTyxZQUFNO0FBQ2pCQSxJQUFBQSxRQUFRLENBQUMsV0FBRCxFQUFjLFlBQU07QUFDeEJHLE1BQUFBLEVBQUUsQ0FBQyxZQUFELEVBQWUsWUFBTTtBQUNuQkYsUUFBQUEsT0FBTyxDQUFDRyxHQUFSLENBQVksQ0FBWixFQUFlLENBQWY7O0FBQ0FDLDJCQUFPQyxLQUFQLENBQWFMLE9BQU8sQ0FBQ00sU0FBUixHQUFvQixDQUFwQixFQUF1QkMsU0FBcEMsRUFBK0MsQ0FBL0M7QUFDSCxPQUhDLENBQUY7QUFJQUwsTUFBQUEsRUFBRSxDQUFDLFdBQUQsRUFBYyxZQUFNO0FBQ2xCRixRQUFBQSxPQUFPLENBQUNHLEdBQVIsQ0FBWSxDQUFaLEVBQWUsQ0FBZjs7QUFDQUMsMkJBQU9DLEtBQVAsQ0FBYUwsT0FBTyxDQUFDTSxTQUFSLEdBQW9CLENBQXBCLEVBQXVCQyxTQUFwQyxFQUErQyxDQUEvQztBQUNILE9BSEMsQ0FBRjtBQUlBTCxNQUFBQSxFQUFFLENBQUMsVUFBRCxFQUFhLFlBQU07QUFDakJGLFFBQUFBLE9BQU8sQ0FBQ0csR0FBUixDQUFZLENBQVosRUFBZSxDQUFmOztBQUNBQywyQkFBT0MsS0FBUCxDQUFhTCxPQUFPLENBQUNNLFNBQVIsR0FBb0IsQ0FBcEIsRUFBdUJDLFNBQXBDLEVBQStDLENBQS9DO0FBQ0gsT0FIQyxDQUFGO0FBSUgsS0FiTyxDQUFSO0FBY0FSLElBQUFBLFFBQVEsQ0FBQyxZQUFELEVBQWUsWUFBTTtBQUN6QkcsTUFBQUEsRUFBRSxDQUFDLFVBQUQsRUFBYSxZQUFNO0FBQ2pCRixRQUFBQSxPQUFPLENBQUNHLEdBQVIsQ0FBWSxDQUFaLEVBQWUsQ0FBZjs7QUFDQUMsMkJBQU9DLEtBQVAsQ0FBYUwsT0FBTyxDQUFDTSxTQUFSLEdBQW9CLENBQXBCLEVBQXVCQyxTQUFwQyxFQUErQyxDQUEvQztBQUNILE9BSEMsQ0FBRjtBQUlBTCxNQUFBQSxFQUFFLENBQUMsYUFBRCxFQUFnQixZQUFNO0FBQ3BCRixRQUFBQSxPQUFPLENBQUNHLEdBQVIsQ0FBWSxDQUFaLEVBQWUsQ0FBZjs7QUFDQUMsMkJBQU9DLEtBQVAsQ0FBYUwsT0FBTyxDQUFDTSxTQUFSLEdBQW9CLENBQXBCLEVBQXVCQyxTQUFwQyxFQUErQyxDQUEvQztBQUNILE9BSEMsQ0FBRjtBQUlBTCxNQUFBQSxFQUFFLENBQUMsVUFBRCxFQUFhLFlBQU07QUFDakJGLFFBQUFBLE9BQU8sQ0FBQ0csR0FBUixDQUFZLENBQVosRUFBZSxDQUFmOztBQUNBQywyQkFBT0MsS0FBUCxDQUFhTCxPQUFPLENBQUNNLFNBQVIsR0FBb0IsQ0FBcEIsRUFBdUJDLFNBQXBDLEVBQStDLENBQS9DO0FBQ0gsT0FIQyxDQUFGO0FBSUgsS0FiTyxDQUFSO0FBY0FSLElBQUFBLFFBQVEsQ0FBQyxXQUFELEVBQWMsWUFBTTtBQUN4QkcsTUFBQUEsRUFBRSxDQUFDLFVBQUQsRUFBYSxZQUFNO0FBQ2pCRixRQUFBQSxPQUFPLENBQUNHLEdBQVIsQ0FBWSxDQUFaLEVBQWUsQ0FBZjs7QUFDQUMsMkJBQU9DLEtBQVAsQ0FBYUwsT0FBTyxDQUFDTSxTQUFSLEdBQW9CLENBQXBCLEVBQXVCQyxTQUFwQyxFQUErQyxDQUEvQztBQUNILE9BSEMsQ0FBRjtBQUlBTCxNQUFBQSxFQUFFLENBQUMsV0FBRCxFQUFjLFlBQU07QUFDbEJGLFFBQUFBLE9BQU8sQ0FBQ0csR0FBUixDQUFZLENBQVosRUFBZSxDQUFmOztBQUNBQywyQkFBT0MsS0FBUCxDQUFhTCxPQUFPLENBQUNNLFNBQVIsR0FBb0IsQ0FBcEIsRUFBdUJDLFNBQXBDLEVBQStDLENBQS9DO0FBQ0gsT0FIQyxDQUFGO0FBSUFMLE1BQUFBLEVBQUUsQ0FBQyxZQUFELEVBQWUsWUFBTTtBQUNuQkYsUUFBQUEsT0FBTyxDQUFDRyxHQUFSLENBQVksQ0FBWixFQUFlLENBQWY7O0FBQ0FDLDJCQUFPQyxLQUFQLENBQWFMLE9BQU8sQ0FBQ00sU0FBUixHQUFvQixDQUFwQixFQUF1QkMsU0FBcEMsRUFBK0MsQ0FBL0M7QUFDSCxPQUhDLENBQUY7QUFJSCxLQWJPLENBQVI7QUFjSCxHQTNDTyxDQUFSO0FBNENILENBL0NPLENBQVIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxraW1fMVxcT25lRHJpdmVcXOODieOCreODpeODoeODs+ODiFxcZGV2XFxyZWFjdFxcanlhbmtlblxcdGVzdCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhc3NlcnQgZnJvbSAnYXNzZXJ0J1xyXG5pbXBvcnQgSnlhbmtlbiBmcm9tICcuLi9zcmMvY29tcG9uZW50cy9KeWFua2VuJ1xyXG5cclxuZGVzY3JpYmUoJ0p5YW5rZW4gQ2xhc3MnLCAoKSA9PiB7XHJcbiAgICBjb25zdCBqeWFua2VuID0gbmV3IEp5YW5rZW4oKVxyXG5cclxuICAgIGRlc2NyaWJlKFwi5Yud5pWXXCIsICgpID0+IHtcclxuICAgICAgICBkZXNjcmliZShcIkNQVeOBjOOCsOODvOOBruWgtOWQiFwiLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIGl0KFwi5Lq66ZaT44GM44Kw44O844Gn5byV44GN5YiG44GRXCIsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIGp5YW5rZW4ucG9uKDAsIDApXHJcbiAgICAgICAgICAgICAgICBhc3NlcnQuZXF1YWwoanlhbmtlbi5nZXRTY29yZXMoKVswXS5qdWRnZW1lbnQsIDApXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIGl0KFwi5Lq66ZaT44GM44OB44On44Kt44Gn6LKg44GRXCIsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIGp5YW5rZW4ucG9uKDEsIDApXHJcbiAgICAgICAgICAgICAgICBhc3NlcnQuZXF1YWwoanlhbmtlbi5nZXRTY29yZXMoKVswXS5qdWRnZW1lbnQsIDIpXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIGl0KFwi5Lq66ZaT44GM44OR44O844Gn5Yud44GhXCIsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIGp5YW5rZW4ucG9uKDIsIDApXHJcbiAgICAgICAgICAgICAgICBhc3NlcnQuZXF1YWwoanlhbmtlbi5nZXRTY29yZXMoKVswXS5qdWRnZW1lbnQsIDEpXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSlcclxuICAgICAgICBkZXNjcmliZShcIkNQVeOBjOODgeODp+OCreOBruWgtOWQiFwiLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIGl0KFwi5Lq66ZaT44GM44Kw44O844Gn5Yud44GhXCIsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIGp5YW5rZW4ucG9uKDAsIDEpXHJcbiAgICAgICAgICAgICAgICBhc3NlcnQuZXF1YWwoanlhbmtlbi5nZXRTY29yZXMoKVswXS5qdWRnZW1lbnQsIDEpXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIGl0KFwi5Lq66ZaT44GM44OB44On44Kt44Gn5byV44GN5YiG44GRXCIsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIGp5YW5rZW4ucG9uKDEsIDEpXHJcbiAgICAgICAgICAgICAgICBhc3NlcnQuZXF1YWwoanlhbmtlbi5nZXRTY29yZXMoKVswXS5qdWRnZW1lbnQsIDApXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIGl0KFwi5Lq66ZaT44GM44OR44O844Gn6LKg44GRXCIsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIGp5YW5rZW4ucG9uKDIsIDEpXHJcbiAgICAgICAgICAgICAgICBhc3NlcnQuZXF1YWwoanlhbmtlbi5nZXRTY29yZXMoKVswXS5qdWRnZW1lbnQsIDIpXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSlcclxuICAgICAgICBkZXNjcmliZShcIkNQVeOBjOODkeODvOOBruWgtOWQiFwiLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIGl0KFwi5Lq66ZaT44GM44Kw44O844Gn6LKg44GRXCIsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIGp5YW5rZW4ucG9uKDAsIDIpXHJcbiAgICAgICAgICAgICAgICBhc3NlcnQuZXF1YWwoanlhbmtlbi5nZXRTY29yZXMoKVswXS5qdWRnZW1lbnQsIDIpXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIGl0KFwi5Lq66ZaT44GM44OB44On44Kt44Gn5Yud44GhXCIsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIGp5YW5rZW4ucG9uKDEsIDIpXHJcbiAgICAgICAgICAgICAgICBhc3NlcnQuZXF1YWwoanlhbmtlbi5nZXRTY29yZXMoKVswXS5qdWRnZW1lbnQsIDEpXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIGl0KFwi5Lq66ZaT44GM44OR44O844Gn5byV44GN5YiG44GRXCIsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIGp5YW5rZW4ucG9uKDIsIDIpXHJcbiAgICAgICAgICAgICAgICBhc3NlcnQuZXF1YWwoanlhbmtlbi5nZXRTY29yZXMoKVswXS5qdWRnZW1lbnQsIDApXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSlcclxuICAgIH0pXHJcbn0pIl19",
    "map": {
      "version": 3,
      "sources": [
        "test.js"
      ],
      "names": [
        "describe",
        "jyanken",
        "Jyanken",
        "it",
        "pon",
        "assert",
        "equal",
        "getScores",
        "judgement"
      ],
      "mappings": ";;AAAA;;AACA;;;;AAEAA,QAAQ,CAAC,eAAD,EAAkB,YAAM;AAC5B,MAAMC,OAAO,GAAG,IAAIC,mBAAJ,EAAhB;AAEAF,EAAAA,QAAQ,CAAC,IAAD,EAAO,YAAM;AACjBA,IAAAA,QAAQ,CAAC,WAAD,EAAc,YAAM;AACxBG,MAAAA,EAAE,CAAC,YAAD,EAAe,YAAM;AACnBF,QAAAA,OAAO,CAACG,GAAR,CAAY,CAAZ,EAAe,CAAf;;AACAC,2BAAOC,KAAP,CAAaL,OAAO,CAACM,SAAR,GAAoB,CAApB,EAAuBC,SAApC,EAA+C,CAA/C;AACH,OAHC,CAAF;AAIAL,MAAAA,EAAE,CAAC,WAAD,EAAc,YAAM;AAClBF,QAAAA,OAAO,CAACG,GAAR,CAAY,CAAZ,EAAe,CAAf;;AACAC,2BAAOC,KAAP,CAAaL,OAAO,CAACM,SAAR,GAAoB,CAApB,EAAuBC,SAApC,EAA+C,CAA/C;AACH,OAHC,CAAF;AAIAL,MAAAA,EAAE,CAAC,UAAD,EAAa,YAAM;AACjBF,QAAAA,OAAO,CAACG,GAAR,CAAY,CAAZ,EAAe,CAAf;;AACAC,2BAAOC,KAAP,CAAaL,OAAO,CAACM,SAAR,GAAoB,CAApB,EAAuBC,SAApC,EAA+C,CAA/C;AACH,OAHC,CAAF;AAIH,KAbO,CAAR;AAcAR,IAAAA,QAAQ,CAAC,YAAD,EAAe,YAAM;AACzBG,MAAAA,EAAE,CAAC,UAAD,EAAa,YAAM;AACjBF,QAAAA,OAAO,CAACG,GAAR,CAAY,CAAZ,EAAe,CAAf;;AACAC,2BAAOC,KAAP,CAAaL,OAAO,CAACM,SAAR,GAAoB,CAApB,EAAuBC,SAApC,EAA+C,CAA/C;AACH,OAHC,CAAF;AAIAL,MAAAA,EAAE,CAAC,aAAD,EAAgB,YAAM;AACpBF,QAAAA,OAAO,CAACG,GAAR,CAAY,CAAZ,EAAe,CAAf;;AACAC,2BAAOC,KAAP,CAAaL,OAAO,CAACM,SAAR,GAAoB,CAApB,EAAuBC,SAApC,EAA+C,CAA/C;AACH,OAHC,CAAF;AAIAL,MAAAA,EAAE,CAAC,UAAD,EAAa,YAAM;AACjBF,QAAAA,OAAO,CAACG,GAAR,CAAY,CAAZ,EAAe,CAAf;;AACAC,2BAAOC,KAAP,CAAaL,OAAO,CAACM,SAAR,GAAoB,CAApB,EAAuBC,SAApC,EAA+C,CAA/C;AACH,OAHC,CAAF;AAIH,KAbO,CAAR;AAcAR,IAAAA,QAAQ,CAAC,WAAD,EAAc,YAAM;AACxBG,MAAAA,EAAE,CAAC,UAAD,EAAa,YAAM;AACjBF,QAAAA,OAAO,CAACG,GAAR,CAAY,CAAZ,EAAe,CAAf;;AACAC,2BAAOC,KAAP,CAAaL,OAAO,CAACM,SAAR,GAAoB,CAApB,EAAuBC,SAApC,EAA+C,CAA/C;AACH,OAHC,CAAF;AAIAL,MAAAA,EAAE,CAAC,WAAD,EAAc,YAAM;AAClBF,QAAAA,OAAO,CAACG,GAAR,CAAY,CAAZ,EAAe,CAAf;;AACAC,2BAAOC,KAAP,CAAaL,OAAO,CAACM,SAAR,GAAoB,CAApB,EAAuBC,SAApC,EAA+C,CAA/C;AACH,OAHC,CAAF;AAIAL,MAAAA,EAAE,CAAC,YAAD,EAAe,YAAM;AACnBF,QAAAA,OAAO,CAACG,GAAR,CAAY,CAAZ,EAAe,CAAf;;AACAC,2BAAOC,KAAP,CAAaL,OAAO,CAACM,SAAR,GAAoB,CAApB,EAAuBC,SAApC,EAA+C,CAA/C;AACH,OAHC,CAAF;AAIH,KAbO,CAAR;AAcH,GA3CO,CAAR;AA4CH,CA/CO,CAAR",
      "sourceRoot": "C:\\Users\\kim_1\\OneDrive\\ドキュメント\\dev\\react\\jyanken\\test",
      "sourcesContent": [
        "import assert from 'assert'\r\nimport Jyanken from '../src/components/Jyanken'\r\n\r\ndescribe('Jyanken Class', () => {\r\n    const jyanken = new Jyanken()\r\n\r\n    describe(\"勝敗\", () => {\r\n        describe(\"CPUがグーの場合\", () => {\r\n            it(\"人間がグーで引き分け\", () => {\r\n                jyanken.pon(0, 0)\r\n                assert.equal(jyanken.getScores()[0].judgement, 0)\r\n            })\r\n            it(\"人間がチョキで負け\", () => {\r\n                jyanken.pon(1, 0)\r\n                assert.equal(jyanken.getScores()[0].judgement, 2)\r\n            })\r\n            it(\"人間がパーで勝ち\", () => {\r\n                jyanken.pon(2, 0)\r\n                assert.equal(jyanken.getScores()[0].judgement, 1)\r\n            })\r\n        })\r\n        describe(\"CPUがチョキの場合\", () => {\r\n            it(\"人間がグーで勝ち\", () => {\r\n                jyanken.pon(0, 1)\r\n                assert.equal(jyanken.getScores()[0].judgement, 1)\r\n            })\r\n            it(\"人間がチョキで引き分け\", () => {\r\n                jyanken.pon(1, 1)\r\n                assert.equal(jyanken.getScores()[0].judgement, 0)\r\n            })\r\n            it(\"人間がパーで負け\", () => {\r\n                jyanken.pon(2, 1)\r\n                assert.equal(jyanken.getScores()[0].judgement, 2)\r\n            })\r\n        })\r\n        describe(\"CPUがパーの場合\", () => {\r\n            it(\"人間がグーで負け\", () => {\r\n                jyanken.pon(0, 2)\r\n                assert.equal(jyanken.getScores()[0].judgement, 2)\r\n            })\r\n            it(\"人間がチョキで勝ち\", () => {\r\n                jyanken.pon(1, 2)\r\n                assert.equal(jyanken.getScores()[0].judgement, 1)\r\n            })\r\n            it(\"人間がパーで引き分け\", () => {\r\n                jyanken.pon(2, 2)\r\n                assert.equal(jyanken.getScores()[0].judgement, 0)\r\n            })\r\n        })\r\n    })\r\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1575922458935
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\kim_1\\\\OneDrive\\\\ドキュメント\\\\dev\\\\react\\\\jyanken\\\\src\\\\components\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\kim_1\\\\OneDrive\\\\ドキュメント\\\\dev\\\\react\\\\jyanken\",\"filename\":\"C:\\\\Users\\\\kim_1\\\\OneDrive\\\\ドキュメント\\\\dev\\\\react\\\\jyanken\\\\src\\\\components\\\\Jyanken.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\kim_1\\\\OneDrive\\\\ドキュメント\\\\dev\\\\react\\\\jyanken\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\kim_1\\OneDrive\\ドキュメント\\dev\\react\\jyanken\\src\\components",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\kim_1\\OneDrive\\ドキュメント\\dev\\react\\jyanken",
      "filename": "C:\\Users\\kim_1\\OneDrive\\ドキュメント\\dev\\react\\jyanken\\src\\components\\Jyanken.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\kim_1\\OneDrive\\ドキュメント\\dev\\react\\jyanken",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\kim_1\\OneDrive\\ドキュメント\\dev\\react\\jyanken\\src\\components\\Jyanken.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\kim_1\\OneDrive\\ドキュメント\\dev\\react\\jyanken\\src\\components\\Jyanken.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\kim_1\\OneDrive\\ドキュメント\\dev\\react\\jyanken\\src\\components",
        "sourceFileName": "Jyanken.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Jyanken =\n/*#__PURE__*/\nfunction () {\n  function Jyanken() {\n    _classCallCheck(this, Jyanken);\n\n    this.scores = [];\n    this.statuses = [0, 0, 0];\n  }\n\n  _createClass(Jyanken, [{\n    key: \"pon\",\n    value: function pon(human_hand) {\n      var computer_hand = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Math.floor(Math.random() * 3);\n      var judgement = (computer_hand - human_hand + 3) % 3;\n      this.scores.push({\n        human: human_hand,\n        computer: computer_hand,\n        created_at: new Date(),\n        judgement: judgement\n      });\n      this.statuses[judgement]++;\n    }\n  }, {\n    key: \"getScores\",\n    value: function getScores() {\n      return this.scores.slice().reverse();\n    }\n  }, {\n    key: \"getStatuses\",\n    value: function getStatuses() {\n      return {\n        draw: this.statuses[0],\n        win: this.statuses[1],\n        lose: this.statuses[2]\n      };\n    }\n  }]);\n\n  return Jyanken;\n}();\n\nexports[\"default\"] = Jyanken;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkp5YW5rZW4uanMiXSwibmFtZXMiOlsiSnlhbmtlbiIsInNjb3JlcyIsInN0YXR1c2VzIiwiaHVtYW5faGFuZCIsImNvbXB1dGVyX2hhbmQiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJqdWRnZW1lbnQiLCJwdXNoIiwiaHVtYW4iLCJjb21wdXRlciIsImNyZWF0ZWRfYXQiLCJEYXRlIiwic2xpY2UiLCJyZXZlcnNlIiwiZHJhdyIsIndpbiIsImxvc2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7SUFBcUJBLE87OztBQUNqQixxQkFBYztBQUFBOztBQUNWLFNBQUtDLE1BQUwsR0FBYyxFQUFkO0FBQ0EsU0FBS0MsUUFBTCxHQUFnQixDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxDQUFoQjtBQUNIOzs7O3dCQUVHQyxVLEVBQXdEO0FBQUEsVUFBNUNDLGFBQTRDLHVFQUE1QkMsSUFBSSxDQUFDQyxLQUFMLENBQVdELElBQUksQ0FBQ0UsTUFBTCxLQUFjLENBQXpCLENBQTRCO0FBQ3hELFVBQU1DLFNBQVMsR0FBRyxDQUFDSixhQUFhLEdBQUdELFVBQWhCLEdBQTRCLENBQTdCLElBQWtDLENBQXBEO0FBQ0EsV0FBS0YsTUFBTCxDQUFZUSxJQUFaLENBQWlCO0FBQUNDLFFBQUFBLEtBQUssRUFBRVAsVUFBUjtBQUFvQlEsUUFBQUEsUUFBUSxFQUFFUCxhQUE5QjtBQUE2Q1EsUUFBQUEsVUFBVSxFQUFFLElBQUlDLElBQUosRUFBekQ7QUFBcUVMLFFBQUFBLFNBQVMsRUFBRUE7QUFBaEYsT0FBakI7QUFDQSxXQUFLTixRQUFMLENBQWNNLFNBQWQ7QUFDSDs7O2dDQUVVO0FBQ1AsYUFBTyxLQUFLUCxNQUFMLENBQVlhLEtBQVosR0FBb0JDLE9BQXBCLEVBQVA7QUFDSDs7O2tDQUVZO0FBQ1QsYUFBTztBQUFDQyxRQUFBQSxJQUFJLEVBQUUsS0FBS2QsUUFBTCxDQUFjLENBQWQsQ0FBUDtBQUF5QmUsUUFBQUEsR0FBRyxFQUFFLEtBQUtmLFFBQUwsQ0FBYyxDQUFkLENBQTlCO0FBQWdEZ0IsUUFBQUEsSUFBSSxFQUFFLEtBQUtoQixRQUFMLENBQWMsQ0FBZDtBQUF0RCxPQUFQO0FBQ0giLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxraW1fMVxcT25lRHJpdmVcXOODieOCreODpeODoeODs+ODiFxcZGV2XFxyZWFjdFxcanlhbmtlblxcc3JjXFxjb21wb25lbnRzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgSnlhbmtlbiB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICB0aGlzLnNjb3JlcyA9IFtdXHJcbiAgICAgICAgdGhpcy5zdGF0dXNlcyA9IFswLCAwLCAwXVxyXG4gICAgfVxyXG5cclxuICAgIHBvbihodW1hbl9oYW5kLCBjb21wdXRlcl9oYW5kID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKjMpKXtcclxuICAgICAgICBjb25zdCBqdWRnZW1lbnQgPSAoY29tcHV0ZXJfaGFuZCAtIGh1bWFuX2hhbmQgKzMpICUgM1xyXG4gICAgICAgIHRoaXMuc2NvcmVzLnB1c2goe2h1bWFuOiBodW1hbl9oYW5kLCBjb21wdXRlcjogY29tcHV0ZXJfaGFuZCwgY3JlYXRlZF9hdDogbmV3IERhdGUoKSwganVkZ2VtZW50OiBqdWRnZW1lbnR9KVxyXG4gICAgICAgIHRoaXMuc3RhdHVzZXNbanVkZ2VtZW50XSsrXHJcbiAgICB9XHJcblxyXG4gICAgZ2V0U2NvcmVzKCl7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuc2NvcmVzLnNsaWNlKCkucmV2ZXJzZSgpXHJcbiAgICB9XHJcblxyXG4gICAgZ2V0U3RhdHVzZXMoKXtcclxuICAgICAgICByZXR1cm4ge2RyYXc6IHRoaXMuc3RhdHVzZXNbMF0sIHdpbjogdGhpcy5zdGF0dXNlc1sxXSwgbG9zZTogdGhpcy5zdGF0dXNlc1syXX1cclxuICAgIH1cclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Jyanken.js"
      ],
      "names": [
        "Jyanken",
        "scores",
        "statuses",
        "human_hand",
        "computer_hand",
        "Math",
        "floor",
        "random",
        "judgement",
        "push",
        "human",
        "computer",
        "created_at",
        "Date",
        "slice",
        "reverse",
        "draw",
        "win",
        "lose"
      ],
      "mappings": ";;;;;;;;;;;;;IAAqBA,O;;;AACjB,qBAAc;AAAA;;AACV,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,QAAL,GAAgB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAhB;AACH;;;;wBAEGC,U,EAAwD;AAAA,UAA5CC,aAA4C,uEAA5BC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,CAAzB,CAA4B;AACxD,UAAMC,SAAS,GAAG,CAACJ,aAAa,GAAGD,UAAhB,GAA4B,CAA7B,IAAkC,CAApD;AACA,WAAKF,MAAL,CAAYQ,IAAZ,CAAiB;AAACC,QAAAA,KAAK,EAAEP,UAAR;AAAoBQ,QAAAA,QAAQ,EAAEP,aAA9B;AAA6CQ,QAAAA,UAAU,EAAE,IAAIC,IAAJ,EAAzD;AAAqEL,QAAAA,SAAS,EAAEA;AAAhF,OAAjB;AACA,WAAKN,QAAL,CAAcM,SAAd;AACH;;;gCAEU;AACP,aAAO,KAAKP,MAAL,CAAYa,KAAZ,GAAoBC,OAApB,EAAP;AACH;;;kCAEY;AACT,aAAO;AAACC,QAAAA,IAAI,EAAE,KAAKd,QAAL,CAAc,CAAd,CAAP;AAAyBe,QAAAA,GAAG,EAAE,KAAKf,QAAL,CAAc,CAAd,CAA9B;AAAgDgB,QAAAA,IAAI,EAAE,KAAKhB,QAAL,CAAc,CAAd;AAAtD,OAAP;AACH",
      "sourceRoot": "C:\\Users\\kim_1\\OneDrive\\ドキュメント\\dev\\react\\jyanken\\src\\components",
      "sourcesContent": [
        "export default class Jyanken {\r\n    constructor() {\r\n        this.scores = []\r\n        this.statuses = [0, 0, 0]\r\n    }\r\n\r\n    pon(human_hand, computer_hand = Math.floor(Math.random()*3)){\r\n        const judgement = (computer_hand - human_hand +3) % 3\r\n        this.scores.push({human: human_hand, computer: computer_hand, created_at: new Date(), judgement: judgement})\r\n        this.statuses[judgement]++\r\n    }\r\n\r\n    getScores(){\r\n        return this.scores.slice().reverse()\r\n    }\r\n\r\n    getStatuses(){\r\n        return {draw: this.statuses[0], win: this.statuses[1], lose: this.statuses[2]}\r\n    }\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1575921251242
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\kim_1\\\\OneDrive\\\\ドキュメント\\\\dev\\\\react\\\\jyanken\\\\test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\kim_1\\\\OneDrive\\\\ドキュメント\\\\dev\\\\react\\\\jyanken\",\"filename\":\"C:\\\\Users\\\\kim_1\\\\OneDrive\\\\ドキュメント\\\\dev\\\\react\\\\jyanken\\\\test\\\\test2.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\kim_1\\\\OneDrive\\\\ドキュメント\\\\dev\\\\react\\\\jyanken\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\kim_1\\OneDrive\\ドキュメント\\dev\\react\\jyanken\\test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\kim_1\\OneDrive\\ドキュメント\\dev\\react\\jyanken",
      "filename": "C:\\Users\\kim_1\\OneDrive\\ドキュメント\\dev\\react\\jyanken\\test\\test2.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\kim_1\\OneDrive\\ドキュメント\\dev\\react\\jyanken",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\kim_1\\OneDrive\\ドキュメント\\dev\\react\\jyanken\\test\\test2.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\kim_1\\OneDrive\\ドキュメント\\dev\\react\\jyanken\\test\\test2.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\kim_1\\OneDrive\\ドキュメント\\dev\\react\\jyanken\\test",
        "sourceFileName": "test2.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _nightmare = _interopRequireDefault(require(\"nightmare\"));\n\nvar _assert = _interopRequireDefault(require(\"assert\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\ndescribe(\"じゃんけんアプリ\", function () {\n  var nightmare = (0, _nightmare[\"default\"])({\n    show: false\n  });\n  it(\"タイトル表示\", function (done) {\n    nightmare[\"goto\"]('http://localhost:8080/').evaluate(function () {\n      return document.querySelector('h1').innerText;\n    }).then(function (title) {\n      _assert[\"default\"].equal(title, 'じゃんけん');\n    });\n    done();\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QyLmpzIl0sIm5hbWVzIjpbImRlc2NyaWJlIiwibmlnaHRtYXJlIiwic2hvdyIsIml0IiwiZG9uZSIsImV2YWx1YXRlIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiaW5uZXJUZXh0IiwidGhlbiIsInRpdGxlIiwiYXNzZXJ0IiwiZXF1YWwiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7Ozs7QUFFQUEsUUFBUSxDQUFDLFVBQUQsRUFBYSxZQUFNO0FBQ3ZCLE1BQU1DLFNBQVMsR0FBRywyQkFBVTtBQUFFQyxJQUFBQSxJQUFJLEVBQUU7QUFBUixHQUFWLENBQWxCO0FBRUFDLEVBQUFBLEVBQUUsQ0FBQyxRQUFELEVBQVcsVUFBQ0MsSUFBRCxFQUFVO0FBQ25CSCxJQUFBQSxTQUFTLFFBQVQsQ0FDTSx3QkFETixFQUVDSSxRQUZELENBRVUsWUFBTTtBQUNaLGFBQU9DLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixJQUF2QixFQUE2QkMsU0FBcEM7QUFDSCxLQUpELEVBS0NDLElBTEQsQ0FLTSxVQUFDQyxLQUFELEVBQVc7QUFDYkMseUJBQU9DLEtBQVAsQ0FBYUYsS0FBYixFQUFvQixPQUFwQjtBQUNILEtBUEQ7QUFRQU4sSUFBQUEsSUFBSTtBQUNQLEdBVkMsQ0FBRjtBQVdILENBZE8sQ0FBUiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGtpbV8xXFxPbmVEcml2ZVxc44OJ44Kt44Ol44Oh44Oz44OIXFxkZXZcXHJlYWN0XFxqeWFua2VuXFx0ZXN0Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE5pZ2h0bWFyZSBmcm9tICduaWdodG1hcmUnXHJcbmltcG9ydCBhc3NlcnQgZnJvbSAnYXNzZXJ0J1xyXG5cclxuZGVzY3JpYmUoXCLjgZjjgoPjgpPjgZHjgpPjgqLjg5fjg6pcIiwgKCkgPT4ge1xyXG4gICAgY29uc3QgbmlnaHRtYXJlID0gTmlnaHRtYXJlKHsgc2hvdzogZmFsc2UgfSlcclxuXHJcbiAgICBpdChcIuOCv+OCpOODiOODq+ihqOekulwiLCAoZG9uZSkgPT4ge1xyXG4gICAgICAgIG5pZ2h0bWFyZVxyXG4gICAgICAgIC5nb3RvKCdodHRwOi8vbG9jYWxob3N0OjgwODAvJylcclxuICAgICAgICAuZXZhbHVhdGUoKCkgPT4ge1xyXG4gICAgICAgICAgICByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaDEnKS5pbm5lclRleHRcclxuICAgICAgICB9KVxyXG4gICAgICAgIC50aGVuKCh0aXRsZSkgPT4ge1xyXG4gICAgICAgICAgICBhc3NlcnQuZXF1YWwodGl0bGUsICfjgZjjgoPjgpPjgZHjgpMnKVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgZG9uZSgpXHJcbiAgICB9KVxyXG59KSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "test2.js"
      ],
      "names": [
        "describe",
        "nightmare",
        "show",
        "it",
        "done",
        "evaluate",
        "document",
        "querySelector",
        "innerText",
        "then",
        "title",
        "assert",
        "equal"
      ],
      "mappings": ";;AAAA;;AACA;;;;AAEAA,QAAQ,CAAC,UAAD,EAAa,YAAM;AACvB,MAAMC,SAAS,GAAG,2BAAU;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAV,CAAlB;AAEAC,EAAAA,EAAE,CAAC,QAAD,EAAW,UAACC,IAAD,EAAU;AACnBH,IAAAA,SAAS,QAAT,CACM,wBADN,EAECI,QAFD,CAEU,YAAM;AACZ,aAAOC,QAAQ,CAACC,aAAT,CAAuB,IAAvB,EAA6BC,SAApC;AACH,KAJD,EAKCC,IALD,CAKM,UAACC,KAAD,EAAW;AACbC,yBAAOC,KAAP,CAAaF,KAAb,EAAoB,OAApB;AACH,KAPD;AAQAN,IAAAA,IAAI;AACP,GAVC,CAAF;AAWH,CAdO,CAAR",
      "sourceRoot": "C:\\Users\\kim_1\\OneDrive\\ドキュメント\\dev\\react\\jyanken\\test",
      "sourcesContent": [
        "import Nightmare from 'nightmare'\r\nimport assert from 'assert'\r\n\r\ndescribe(\"じゃんけんアプリ\", () => {\r\n    const nightmare = Nightmare({ show: false })\r\n\r\n    it(\"タイトル表示\", (done) => {\r\n        nightmare\r\n        .goto('http://localhost:8080/')\r\n        .evaluate(() => {\r\n            return document.querySelector('h1').innerText\r\n        })\r\n        .then((title) => {\r\n            assert.equal(title, 'じゃんけん')\r\n        })\r\n        done()\r\n    })\r\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1575925376303
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\kim_1\\\\OneDrive\\\\ドキュメント\\\\dev\\\\react\\\\jyanken\\\\test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\kim_1\\\\OneDrive\\\\ドキュメント\\\\dev\\\\react\\\\jyanken\",\"filename\":\"C:\\\\Users\\\\kim_1\\\\OneDrive\\\\ドキュメント\\\\dev\\\\react\\\\jyanken\\\\test\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\kim_1\\\\OneDrive\\\\ドキュメント\\\\dev\\\\react\\\\jyanken\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\kim_1\\OneDrive\\ドキュメント\\dev\\react\\jyanken\\test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\kim_1\\OneDrive\\ドキュメント\\dev\\react\\jyanken",
      "filename": "C:\\Users\\kim_1\\OneDrive\\ドキュメント\\dev\\react\\jyanken\\test\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\kim_1\\OneDrive\\ドキュメント\\dev\\react\\jyanken",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\kim_1\\OneDrive\\ドキュメント\\dev\\react\\jyanken\\test\\index.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\kim_1\\OneDrive\\ドキュメント\\dev\\react\\jyanken\\test\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\kim_1\\OneDrive\\ドキュメント\\dev\\react\\jyanken\\test",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _nightmare = _interopRequireDefault(require(\"nightmare\"));\n\nvar _assert = _interopRequireDefault(require(\"assert\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n_nightmare[\"default\"].action('getTexts', function (selector, done) {\n  this.evaluate_now(function (selector) {\n    return [].slice.call(document.querySelectorAll(selector)).map(function (e) {\n      return e.innerText;\n    });\n  }, done, selector);\n});\n\ndescribe(\"じゃんけんアプリ\", function () {\n  var nightmare = (0, _nightmare[\"default\"])({\n    show: false\n  });\n  var URL = 'http://localhost:8080/';\n  it(\"タイトル表示\", function (done) {\n    nightmare[\"goto\"](URL).evaluate(function () {\n      return document.querySelector('h1').innerText;\n    }).then(function (title) {\n      _assert[\"default\"].equal(title, 'じゃんけん');\n    });\n    done();\n  });\n  it(\"グーをクリックして対戦結果が表示される\", function (done) {\n    nightmare[\"goto\"](URL).click('#btn-gu').getTexts('tbody td').then(function (texts) {\n      var _texts = _slicedToArray(texts, 4),\n          time = _texts[0],\n          human = _texts[1],\n          computer = _texts[2],\n          judgment = _texts[3];\n\n      _assert[\"default\"].equal(human, 'グー');\n\n      _assert[\"default\"].ok(computer.match(/^(グー|チョキ|パー)$/));\n\n      _assert[\"default\"].ok(judgment.match(/^(勝利|引き分け|敗北)$/));\n    });\n    done();\n  });\n  it(\"グーをクリックして対戦成績をクリックすると対戦成績が表示される\", function (done) {\n    nightmare[\"goto\"](URL).click('#btn-gu').click('#tab-status').getTexts('tbody td').then(function (texts) {\n      var _texts$map = texts.map(function (e) {\n        return Number(e);\n      }),\n          _texts$map2 = _slicedToArray(_texts$map, 3),\n          win = _texts$map2[0],\n          lose = _texts$map2[1],\n          draw = _texts$map2[2];\n\n      _assert[\"default\"].ok(win >= 0 && win <= 1);\n\n      _assert[\"default\"].ok(lose >= 0 && lose <= 1);\n\n      _assert[\"default\"].ok(draw >= 0 && draw <= 1);\n\n      _assert[\"default\"].equal(win + lose + draw);\n    });\n    done();\n  });\n  it(\"2回クリックすると2行表示される\", function (done) {\n    nightmare[\"goto\"](URL).click('#btn-gu').click('#btn-gu').click('#tab-status').getTexts('tbody td').then(function (texts) {\n      _assert[\"default\"].equal(texts.length, 2);\n    });\n    done();\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIk5pZ2h0bWFyZSIsImFjdGlvbiIsInNlbGVjdG9yIiwiZG9uZSIsImV2YWx1YXRlX25vdyIsInNsaWNlIiwiY2FsbCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvckFsbCIsIm1hcCIsImUiLCJpbm5lclRleHQiLCJkZXNjcmliZSIsIm5pZ2h0bWFyZSIsInNob3ciLCJVUkwiLCJpdCIsImV2YWx1YXRlIiwicXVlcnlTZWxlY3RvciIsInRoZW4iLCJ0aXRsZSIsImFzc2VydCIsImVxdWFsIiwiY2xpY2siLCJnZXRUZXh0cyIsInRleHRzIiwidGltZSIsImh1bWFuIiwiY29tcHV0ZXIiLCJqdWRnbWVudCIsIm9rIiwibWF0Y2giLCJOdW1iZXIiLCJ3aW4iLCJsb3NlIiwiZHJhdyIsImxlbmd0aCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7Ozs7Ozs7Ozs7O0FBRUFBLHNCQUFVQyxNQUFWLENBQWlCLFVBQWpCLEVBQTZCLFVBQVNDLFFBQVQsRUFBbUJDLElBQW5CLEVBQXdCO0FBQ2pELE9BQUtDLFlBQUwsQ0FBa0IsVUFBQ0YsUUFBRCxFQUFjO0FBQzVCLFdBQU8sR0FBR0csS0FBSCxDQUFTQyxJQUFULENBQWNDLFFBQVEsQ0FBQ0MsZ0JBQVQsQ0FBMEJOLFFBQTFCLENBQWQsRUFBbURPLEdBQW5ELENBQXVELFVBQUNDLENBQUQ7QUFBQSxhQUFPQSxDQUFDLENBQUNDLFNBQVQ7QUFBQSxLQUF2RCxDQUFQO0FBQ0gsR0FGRCxFQUVHUixJQUZILEVBRVNELFFBRlQ7QUFHSCxDQUpEOztBQU9BVSxRQUFRLENBQUMsVUFBRCxFQUFhLFlBQU07QUFDdkIsTUFBTUMsU0FBUyxHQUFHLDJCQUFVO0FBQUVDLElBQUFBLElBQUksRUFBRTtBQUFSLEdBQVYsQ0FBbEI7QUFDQSxNQUFNQyxHQUFHLEdBQUcsd0JBQVo7QUFFQUMsRUFBQUEsRUFBRSxDQUFDLFFBQUQsRUFBVyxVQUFDYixJQUFELEVBQVU7QUFDbkJVLElBQUFBLFNBQVMsUUFBVCxDQUNNRSxHQUROLEVBRUNFLFFBRkQsQ0FFVSxZQUFNO0FBQ1osYUFBT1YsUUFBUSxDQUFDVyxhQUFULENBQXVCLElBQXZCLEVBQTZCUCxTQUFwQztBQUNILEtBSkQsRUFLQ1EsSUFMRCxDQUtNLFVBQUNDLEtBQUQsRUFBVztBQUNiQyx5QkFBT0MsS0FBUCxDQUFhRixLQUFiLEVBQW9CLE9BQXBCO0FBQ0gsS0FQRDtBQVFBakIsSUFBQUEsSUFBSTtBQUNQLEdBVkMsQ0FBRjtBQVlBYSxFQUFBQSxFQUFFLENBQUMscUJBQUQsRUFBd0IsVUFBQ2IsSUFBRCxFQUFVO0FBQ2hDVSxJQUFBQSxTQUFTLFFBQVQsQ0FDTUUsR0FETixFQUVDUSxLQUZELENBRU8sU0FGUCxFQUdDQyxRQUhELENBR1UsVUFIVixFQUlDTCxJQUpELENBSU0sVUFBQ00sS0FBRCxFQUFXO0FBQUEsa0NBQzZCQSxLQUQ3QjtBQUFBLFVBQ05DLElBRE07QUFBQSxVQUNBQyxLQURBO0FBQUEsVUFDT0MsUUFEUDtBQUFBLFVBQ2lCQyxRQURqQjs7QUFFYlIseUJBQU9DLEtBQVAsQ0FBYUssS0FBYixFQUFvQixJQUFwQjs7QUFDQU4seUJBQU9TLEVBQVAsQ0FBVUYsUUFBUSxDQUFDRyxLQUFULENBQWUsZUFBZixDQUFWOztBQUNBVix5QkFBT1MsRUFBUCxDQUFVRCxRQUFRLENBQUNFLEtBQVQsQ0FBZSxnQkFBZixDQUFWO0FBQ0gsS0FURDtBQVVBNUIsSUFBQUEsSUFBSTtBQUNQLEdBWkMsQ0FBRjtBQWNBYSxFQUFBQSxFQUFFLENBQUMsaUNBQUQsRUFBb0MsVUFBQ2IsSUFBRCxFQUFVO0FBQzVDVSxJQUFBQSxTQUFTLFFBQVQsQ0FDTUUsR0FETixFQUVDUSxLQUZELENBRU8sU0FGUCxFQUdDQSxLQUhELENBR08sYUFIUCxFQUlDQyxRQUpELENBSVUsVUFKVixFQUtDTCxJQUxELENBS00sVUFBQ00sS0FBRCxFQUFXO0FBQUEsdUJBQ2FBLEtBQUssQ0FBQ2hCLEdBQU4sQ0FBVSxVQUFDQyxDQUFEO0FBQUEsZUFBT3NCLE1BQU0sQ0FBQ3RCLENBQUQsQ0FBYjtBQUFBLE9BQVYsQ0FEYjtBQUFBO0FBQUEsVUFDTnVCLEdBRE07QUFBQSxVQUNEQyxJQURDO0FBQUEsVUFDS0MsSUFETDs7QUFFYmQseUJBQU9TLEVBQVAsQ0FBVUcsR0FBRyxJQUFJLENBQVAsSUFBWUEsR0FBRyxJQUFHLENBQTVCOztBQUNBWix5QkFBT1MsRUFBUCxDQUFVSSxJQUFJLElBQUksQ0FBUixJQUFhQSxJQUFJLElBQUcsQ0FBOUI7O0FBQ0FiLHlCQUFPUyxFQUFQLENBQVVLLElBQUksSUFBSSxDQUFSLElBQWFBLElBQUksSUFBRyxDQUE5Qjs7QUFDQWQseUJBQU9DLEtBQVAsQ0FBYVcsR0FBRyxHQUFHQyxJQUFOLEdBQWFDLElBQTFCO0FBQ0gsS0FYRDtBQVlBaEMsSUFBQUEsSUFBSTtBQUNQLEdBZEMsQ0FBRjtBQWdCQWEsRUFBQUEsRUFBRSxDQUFDLGtCQUFELEVBQXFCLFVBQUNiLElBQUQsRUFBVTtBQUM3QlUsSUFBQUEsU0FBUyxRQUFULENBQ01FLEdBRE4sRUFFQ1EsS0FGRCxDQUVPLFNBRlAsRUFHQ0EsS0FIRCxDQUdPLFNBSFAsRUFJQ0EsS0FKRCxDQUlPLGFBSlAsRUFLQ0MsUUFMRCxDQUtVLFVBTFYsRUFNQ0wsSUFORCxDQU1NLFVBQUNNLEtBQUQsRUFBVztBQUNiSix5QkFBT0MsS0FBUCxDQUFhRyxLQUFLLENBQUNXLE1BQW5CLEVBQTJCLENBQTNCO0FBQ0gsS0FSRDtBQVNBakMsSUFBQUEsSUFBSTtBQUNQLEdBWEMsQ0FBRjtBQVlILENBMURPLENBQVIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxraW1fMVxcT25lRHJpdmVcXOODieOCreODpeODoeODs+ODiFxcZGV2XFxyZWFjdFxcanlhbmtlblxcdGVzdCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBOaWdodG1hcmUgZnJvbSAnbmlnaHRtYXJlJ1xyXG5pbXBvcnQgYXNzZXJ0IGZyb20gJ2Fzc2VydCdcclxuXHJcbk5pZ2h0bWFyZS5hY3Rpb24oJ2dldFRleHRzJywgZnVuY3Rpb24oc2VsZWN0b3IsIGRvbmUpe1xyXG4gICAgdGhpcy5ldmFsdWF0ZV9ub3coKHNlbGVjdG9yKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIFtdLnNsaWNlLmNhbGwoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChzZWxlY3RvcikpLm1hcCgoZSkgPT4gZS5pbm5lclRleHQpXHJcbiAgICB9LCBkb25lLCBzZWxlY3RvcilcclxufSlcclxuXHJcblxyXG5kZXNjcmliZShcIuOBmOOCg+OCk+OBkeOCk+OCouODl+ODqlwiLCAoKSA9PiB7XHJcbiAgICBjb25zdCBuaWdodG1hcmUgPSBOaWdodG1hcmUoeyBzaG93OiBmYWxzZSB9KVxyXG4gICAgY29uc3QgVVJMID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MC8nXHJcblxyXG4gICAgaXQoXCLjgr/jgqTjg4jjg6vooajnpLpcIiwgKGRvbmUpID0+IHtcclxuICAgICAgICBuaWdodG1hcmVcclxuICAgICAgICAuZ290byhVUkwpXHJcbiAgICAgICAgLmV2YWx1YXRlKCgpID0+IHtcclxuICAgICAgICAgICAgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2gxJykuaW5uZXJUZXh0XHJcbiAgICAgICAgfSlcclxuICAgICAgICAudGhlbigodGl0bGUpID0+IHtcclxuICAgICAgICAgICAgYXNzZXJ0LmVxdWFsKHRpdGxlLCAn44GY44KD44KT44GR44KTJylcclxuICAgICAgICB9KVxyXG4gICAgICAgIGRvbmUoKVxyXG4gICAgfSlcclxuXHJcbiAgICBpdChcIuOCsOODvOOCkuOCr+ODquODg+OCr+OBl+OBpuWvvuaIpue1kOaenOOBjOihqOekuuOBleOCjOOCi1wiLCAoZG9uZSkgPT4ge1xyXG4gICAgICAgIG5pZ2h0bWFyZVxyXG4gICAgICAgIC5nb3RvKFVSTClcclxuICAgICAgICAuY2xpY2soJyNidG4tZ3UnKVxyXG4gICAgICAgIC5nZXRUZXh0cygndGJvZHkgdGQnKVxyXG4gICAgICAgIC50aGVuKCh0ZXh0cykgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBbdGltZSwgaHVtYW4sIGNvbXB1dGVyLCBqdWRnbWVudF0gPSB0ZXh0c1xyXG4gICAgICAgICAgICBhc3NlcnQuZXF1YWwoaHVtYW4sICfjgrDjg7wnKVxyXG4gICAgICAgICAgICBhc3NlcnQub2soY29tcHV0ZXIubWF0Y2goL14o44Kw44O8fOODgeODp+OCrXzjg5Hjg7wpJC8pKVxyXG4gICAgICAgICAgICBhc3NlcnQub2soanVkZ21lbnQubWF0Y2goL14o5Yud5YipfOW8leOBjeWIhuOBkXzmlZfljJcpJC8pKVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgZG9uZSgpXHJcbiAgICB9KVxyXG5cclxuICAgIGl0KFwi44Kw44O844KS44Kv44Oq44OD44Kv44GX44Gm5a++5oim5oiQ57i+44KS44Kv44Oq44OD44Kv44GZ44KL44Go5a++5oim5oiQ57i+44GM6KGo56S644GV44KM44KLXCIsIChkb25lKSA9PiB7XHJcbiAgICAgICAgbmlnaHRtYXJlXHJcbiAgICAgICAgLmdvdG8oVVJMKVxyXG4gICAgICAgIC5jbGljaygnI2J0bi1ndScpXHJcbiAgICAgICAgLmNsaWNrKCcjdGFiLXN0YXR1cycpXHJcbiAgICAgICAgLmdldFRleHRzKCd0Ym9keSB0ZCcpXHJcbiAgICAgICAgLnRoZW4oKHRleHRzKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IFt3aW4sIGxvc2UsIGRyYXddID0gdGV4dHMubWFwKChlKSA9PiBOdW1iZXIoZSkpXHJcbiAgICAgICAgICAgIGFzc2VydC5vayh3aW4gPj0gMCAmJiB3aW4gPD0xKVxyXG4gICAgICAgICAgICBhc3NlcnQub2sobG9zZSA+PSAwICYmIGxvc2UgPD0xKVxyXG4gICAgICAgICAgICBhc3NlcnQub2soZHJhdyA+PSAwICYmIGRyYXcgPD0xKVxyXG4gICAgICAgICAgICBhc3NlcnQuZXF1YWwod2luICsgbG9zZSArIGRyYXcpXHJcbiAgICAgICAgfSlcclxuICAgICAgICBkb25lKClcclxuICAgIH0pXHJcblxyXG4gICAgaXQoXCIy5Zue44Kv44Oq44OD44Kv44GZ44KL44GoMuihjOihqOekuuOBleOCjOOCi1wiLCAoZG9uZSkgPT4ge1xyXG4gICAgICAgIG5pZ2h0bWFyZVxyXG4gICAgICAgIC5nb3RvKFVSTClcclxuICAgICAgICAuY2xpY2soJyNidG4tZ3UnKVxyXG4gICAgICAgIC5jbGljaygnI2J0bi1ndScpXHJcbiAgICAgICAgLmNsaWNrKCcjdGFiLXN0YXR1cycpXHJcbiAgICAgICAgLmdldFRleHRzKCd0Ym9keSB0ZCcpXHJcbiAgICAgICAgLnRoZW4oKHRleHRzKSA9PiB7XHJcbiAgICAgICAgICAgIGFzc2VydC5lcXVhbCh0ZXh0cy5sZW5ndGgsIDIpXHJcbiAgICAgICAgfSlcclxuICAgICAgICBkb25lKClcclxuICAgIH0pXHJcbn0pIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Nightmare",
        "action",
        "selector",
        "done",
        "evaluate_now",
        "slice",
        "call",
        "document",
        "querySelectorAll",
        "map",
        "e",
        "innerText",
        "describe",
        "nightmare",
        "show",
        "URL",
        "it",
        "evaluate",
        "querySelector",
        "then",
        "title",
        "assert",
        "equal",
        "click",
        "getTexts",
        "texts",
        "time",
        "human",
        "computer",
        "judgment",
        "ok",
        "match",
        "Number",
        "win",
        "lose",
        "draw",
        "length"
      ],
      "mappings": ";;AAAA;;AACA;;;;;;;;;;;;AAEAA,sBAAUC,MAAV,CAAiB,UAAjB,EAA6B,UAASC,QAAT,EAAmBC,IAAnB,EAAwB;AACjD,OAAKC,YAAL,CAAkB,UAACF,QAAD,EAAc;AAC5B,WAAO,GAAGG,KAAH,CAASC,IAAT,CAAcC,QAAQ,CAACC,gBAAT,CAA0BN,QAA1B,CAAd,EAAmDO,GAAnD,CAAuD,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACC,SAAT;AAAA,KAAvD,CAAP;AACH,GAFD,EAEGR,IAFH,EAESD,QAFT;AAGH,CAJD;;AAOAU,QAAQ,CAAC,UAAD,EAAa,YAAM;AACvB,MAAMC,SAAS,GAAG,2BAAU;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAV,CAAlB;AACA,MAAMC,GAAG,GAAG,wBAAZ;AAEAC,EAAAA,EAAE,CAAC,QAAD,EAAW,UAACb,IAAD,EAAU;AACnBU,IAAAA,SAAS,QAAT,CACME,GADN,EAECE,QAFD,CAEU,YAAM;AACZ,aAAOV,QAAQ,CAACW,aAAT,CAAuB,IAAvB,EAA6BP,SAApC;AACH,KAJD,EAKCQ,IALD,CAKM,UAACC,KAAD,EAAW;AACbC,yBAAOC,KAAP,CAAaF,KAAb,EAAoB,OAApB;AACH,KAPD;AAQAjB,IAAAA,IAAI;AACP,GAVC,CAAF;AAYAa,EAAAA,EAAE,CAAC,qBAAD,EAAwB,UAACb,IAAD,EAAU;AAChCU,IAAAA,SAAS,QAAT,CACME,GADN,EAECQ,KAFD,CAEO,SAFP,EAGCC,QAHD,CAGU,UAHV,EAICL,IAJD,CAIM,UAACM,KAAD,EAAW;AAAA,kCAC6BA,KAD7B;AAAA,UACNC,IADM;AAAA,UACAC,KADA;AAAA,UACOC,QADP;AAAA,UACiBC,QADjB;;AAEbR,yBAAOC,KAAP,CAAaK,KAAb,EAAoB,IAApB;;AACAN,yBAAOS,EAAP,CAAUF,QAAQ,CAACG,KAAT,CAAe,eAAf,CAAV;;AACAV,yBAAOS,EAAP,CAAUD,QAAQ,CAACE,KAAT,CAAe,gBAAf,CAAV;AACH,KATD;AAUA5B,IAAAA,IAAI;AACP,GAZC,CAAF;AAcAa,EAAAA,EAAE,CAAC,iCAAD,EAAoC,UAACb,IAAD,EAAU;AAC5CU,IAAAA,SAAS,QAAT,CACME,GADN,EAECQ,KAFD,CAEO,SAFP,EAGCA,KAHD,CAGO,aAHP,EAICC,QAJD,CAIU,UAJV,EAKCL,IALD,CAKM,UAACM,KAAD,EAAW;AAAA,uBACaA,KAAK,CAAChB,GAAN,CAAU,UAACC,CAAD;AAAA,eAAOsB,MAAM,CAACtB,CAAD,CAAb;AAAA,OAAV,CADb;AAAA;AAAA,UACNuB,GADM;AAAA,UACDC,IADC;AAAA,UACKC,IADL;;AAEbd,yBAAOS,EAAP,CAAUG,GAAG,IAAI,CAAP,IAAYA,GAAG,IAAG,CAA5B;;AACAZ,yBAAOS,EAAP,CAAUI,IAAI,IAAI,CAAR,IAAaA,IAAI,IAAG,CAA9B;;AACAb,yBAAOS,EAAP,CAAUK,IAAI,IAAI,CAAR,IAAaA,IAAI,IAAG,CAA9B;;AACAd,yBAAOC,KAAP,CAAaW,GAAG,GAAGC,IAAN,GAAaC,IAA1B;AACH,KAXD;AAYAhC,IAAAA,IAAI;AACP,GAdC,CAAF;AAgBAa,EAAAA,EAAE,CAAC,kBAAD,EAAqB,UAACb,IAAD,EAAU;AAC7BU,IAAAA,SAAS,QAAT,CACME,GADN,EAECQ,KAFD,CAEO,SAFP,EAGCA,KAHD,CAGO,SAHP,EAICA,KAJD,CAIO,aAJP,EAKCC,QALD,CAKU,UALV,EAMCL,IAND,CAMM,UAACM,KAAD,EAAW;AACbJ,yBAAOC,KAAP,CAAaG,KAAK,CAACW,MAAnB,EAA2B,CAA3B;AACH,KARD;AASAjC,IAAAA,IAAI;AACP,GAXC,CAAF;AAYH,CA1DO,CAAR",
      "sourceRoot": "C:\\Users\\kim_1\\OneDrive\\ドキュメント\\dev\\react\\jyanken\\test",
      "sourcesContent": [
        "import Nightmare from 'nightmare'\r\nimport assert from 'assert'\r\n\r\nNightmare.action('getTexts', function(selector, done){\r\n    this.evaluate_now((selector) => {\r\n        return [].slice.call(document.querySelectorAll(selector)).map((e) => e.innerText)\r\n    }, done, selector)\r\n})\r\n\r\n\r\ndescribe(\"じゃんけんアプリ\", () => {\r\n    const nightmare = Nightmare({ show: false })\r\n    const URL = 'http://localhost:8080/'\r\n\r\n    it(\"タイトル表示\", (done) => {\r\n        nightmare\r\n        .goto(URL)\r\n        .evaluate(() => {\r\n            return document.querySelector('h1').innerText\r\n        })\r\n        .then((title) => {\r\n            assert.equal(title, 'じゃんけん')\r\n        })\r\n        done()\r\n    })\r\n\r\n    it(\"グーをクリックして対戦結果が表示される\", (done) => {\r\n        nightmare\r\n        .goto(URL)\r\n        .click('#btn-gu')\r\n        .getTexts('tbody td')\r\n        .then((texts) => {\r\n            const [time, human, computer, judgment] = texts\r\n            assert.equal(human, 'グー')\r\n            assert.ok(computer.match(/^(グー|チョキ|パー)$/))\r\n            assert.ok(judgment.match(/^(勝利|引き分け|敗北)$/))\r\n        })\r\n        done()\r\n    })\r\n\r\n    it(\"グーをクリックして対戦成績をクリックすると対戦成績が表示される\", (done) => {\r\n        nightmare\r\n        .goto(URL)\r\n        .click('#btn-gu')\r\n        .click('#tab-status')\r\n        .getTexts('tbody td')\r\n        .then((texts) => {\r\n            const [win, lose, draw] = texts.map((e) => Number(e))\r\n            assert.ok(win >= 0 && win <=1)\r\n            assert.ok(lose >= 0 && lose <=1)\r\n            assert.ok(draw >= 0 && draw <=1)\r\n            assert.equal(win + lose + draw)\r\n        })\r\n        done()\r\n    })\r\n\r\n    it(\"2回クリックすると2行表示される\", (done) => {\r\n        nightmare\r\n        .goto(URL)\r\n        .click('#btn-gu')\r\n        .click('#btn-gu')\r\n        .click('#tab-status')\r\n        .getTexts('tbody td')\r\n        .then((texts) => {\r\n            assert.equal(texts.length, 2)\r\n        })\r\n        done()\r\n    })\r\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1575932553305
  }
}